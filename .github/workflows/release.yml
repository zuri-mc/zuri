name: Release
on:
  push:
    branches:
      - main
jobs:
  bump:
    name: Bump & Release Draft
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.bump.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo ${{ toJSON(github.event) }}
      - uses: jefflinse/pr-semver-bump@99d71e35cf07ca6e2e5f1200c5944c1dc74006ff
        name: Bump and Tag Version
        id: bump
        with:
          mode: bump
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          with-v: true
          minor-label: new-feature
          patch-label: bug-fix
          require-release-notes: true
          release-notes-prefix: -- begin release notes --
          release-notes-suffix: -- end release notes --
      - name: Create draft release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          omitDraftDuringUpdate: true
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
          tag: ${{ steps.bump.outputs.version }}
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    needs: bump
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          # - windows-latest
        include:
          - os: ubuntu-latest
            release_suffix: ubuntu
          - os: macos-latest
            release_suffix: mac
          # - os: windows-latest
          #   release_suffix: windows
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-stable-${{ hashFiles('**/Cargo.toml') }}

      - run: mkdir out/

      - name: Install alsa and udev
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
        if: runner.os == 'linux'

      - uses: dtolnay/rust-toolchain@stable

      - name: Build zuri
        run: |
          cargo build --release --bin zuri
          mv target/release/zuri out/zuri-${{ runner.os }}

      - name: Build zuri wayland
        if: runner.os == 'linux'
        run: |
          cargo build --release --bin zuri --features=wayland
          mv target/release/zuri out/zuri-wayland-${{ runner.os }}

      - name: Release binary
        uses: ncipollo/release-action@v1
        with:
          artifacts: "out/*"
          tag: ${{ needs.bump.outputs.tag }}
          draft: true
          omitDraftDuringUpdate: true
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true

  release:
    name: Make release no longer draft
    runs-on: ubuntu-latest
    needs: ["build", "bump"]
    steps:
      - name: Release binary
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.bump.outputs.tag }}
          draft: false
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          omitPrereleaseDuringUpdate: true
